{"version":3,"sources":["components/statistics/stat.module.css","components/FeedbackOptions/fb.module.css","components/Section/section.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification.jsx","components/statistics/statistics.jsx","components/Section/section.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","options","names","Object","keys","className","css","btnsList","map","name","btns","type","onClick","btn","Notification","message","stats","Statistics","good","neutral","bad","total","positivePercentage","statsCount","Section","title","children","section","App","useState","setGood","setNeutral","setBad","setTotal","setPositivePercentage","state","useEffect","Math","round","e","target","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f84b3a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"stat_stats__2FKLw\",\"statsCount\":\"stat_statsCount__fPrME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnsList\":\"fb_btnsList__3NDBz\",\"btns\":\"fb_btns__mIOd0\",\"btn\":\"fb_btn__3zity\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__2Amvn\"};","import PropTypes from 'prop-types';\nimport css from './fb.module.css';\n\nexport const FeedbackOptions = ({ onLeaveFeedback, options }) => {\n    const names = Object.keys(options);\n    return (\n        <ul className={css.btnsList}>\n            {names.map(name => (\n                <li key={name} className={css.btns}>\n                    <button\n                        type=\"button\"\n                        name={name}\n                        onClick={onLeaveFeedback}\n                        className={css.btn}\n                    >\n                        {name}\n                    </button>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nFeedbackOptions.propTypes = {\n    onLeaveFeedback: PropTypes.func,\n    options: PropTypes.object,\n};\n","import css from './statistics/stat.module.css';\nexport const Notification = ({ message }) => {\n    return <p className={css.stats}>{message}</p>;\n};\n","import PropTypes from 'prop-types';\nimport css from './stat.module.css';\nimport { Notification } from '../Notification';\nexport const Statistics = ({\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage,\n}) => {\n    return good === 0 && neutral === 0 && bad === 0 ? (\n        <Notification message=\"No feedback given\" />\n    ) : (\n        <>\n            <p className={css.stats}>\n                Good: <span className={css.statsCount}>{good}</span>\n            </p>\n            <p className={css.stats}>\n                Neutral: <span className={css.statsCount}>{neutral}</span>\n            </p>\n            <p className={css.stats}>\n                Bad: <span className={css.statsCount}>{bad}</span>\n            </p>\n            <p className={css.stats}>\n                Total: <span className={css.statsCount}>{total}</span>\n            </p>\n            <p className={css.stats}>\n                Positive feedback:{' '}\n                <span className={css.statsCount}>{positivePercentage}%</span>\n            </p>\n        </>\n    );\n};\n\nStatistics.propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n};\n","import css from './section.module.css';\nexport const Section = ({ title, children }) => {\n    return (\n        <section className={css.section}>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    );\n};\n","import { useEffect, useState } from 'react';\nimport { FeedbackOptions } from './components/FeedbackOptions/FeedbackOptions';\nimport { Statistics } from './components/statistics/statistics';\nimport { Section } from './components/Section/section';\n\nexport const App = () => {\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n    const [total, setTotal] = useState(0);\n    const [positivePercentage, setPositivePercentage] = useState(0);\n    const state = { good, neutral, bad };\n\n    const onClick = e => {\n        switch (e.target.name) {\n            case 'good':\n                setGood(prevState => prevState + 1);\n                break;\n            case 'neutral':\n                setNeutral(prevState => prevState + 1);\n                break;\n            case 'bad':\n                setBad(prevState => prevState + 1);\n                break;\n            default:\n                return;\n        }\n    };\n    useEffect(() => {\n        setTotal(good + neutral + bad);\n    }, [good, neutral, bad]);\n\n    useEffect(() => {\n        setPositivePercentage(Math.round((good / total) * 100));\n    }, [good, total]);\n\n    return (\n        <div>\n            <Section title=\"Please leave feedback\">\n                <FeedbackOptions options={state} onLeaveFeedback={onClick} />\n            </Section>\n            <Section title=\"Statistics\">\n                <Statistics\n                    good={good}\n                    neutral={neutral}\n                    bad={bad}\n                    total={total}\n                    positivePercentage={positivePercentage}\n                />\n            </Section>\n        </div>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}